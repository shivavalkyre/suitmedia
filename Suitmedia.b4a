Build1=Default,b4a.example
Build2=suitmedia,com.suitmedia
File1=image_event.png
File10=marker1.png
File11=page2_bottom.png
File12=page2_center.png
File13=page2_top2.png
File14=profile1.png
File2=isiEvent.bal
File3=isiGuest.bal
File4=Layout.bal
File5=layout_page2.bal
File6=layout_page3.bal
File7=Layout_page4.bal
File8=LayoutInfoWindowPanel.bal
File9=logo_mobile.png
FileGroup1=Default Group
FileGroup10=Default Group
FileGroup11=Default Group
FileGroup12=Default Group
FileGroup13=Default Group
FileGroup14=Default Group
FileGroup2=Default Group
FileGroup3=Default Group
FileGroup4=Default Group
FileGroup5=Default Group
FileGroup6=Default Group
FileGroup7=Default Group
FileGroup8=Default Group
FileGroup9=Default Group
Group=Default Group
Library1=appcompat
Library10=xui
Library11=googlemapsextras
Library2=core
Library3=googlemaps
Library4=javaobject
Library5=json
Library6=okhttputils2
Library7=phone
Library8=runtimepermissions
Library9=xcustomlistview
ManifestCode='This code will be applied to the manifest file during compilation.~\n~'You do not need to modify it in most cases.~\n~'See this link for for more information: https://www.b4x.com/forum/showthread.php?p=78136~\n~AddManifestText(~\n~<uses-sdk android:minSdkVersion="14" android:targetSdkVersion="29"/>~\n~<supports-screens android:largeScreens="true" ~\n~    android:normalScreens="true" ~\n~    android:smallScreens="true" ~\n~    android:anyDensity="true"/>)~\n~SetApplicationAttribute(android:icon, "@drawable/icon")~\n~SetApplicationAttribute(android:label, "$LABEL$")~\n~SetApplicationAttribute(android:theme, "@style/MyAppTheme")~\n~CreateResource(values, theme.xml,~\n~<resources>~\n~    <style name="MyAppTheme" parent="Theme.AppCompat.Light.NoActionBar">~\n~        <item name="colorPrimary">#FF6700</item>~\n~        <item name="colorPrimaryDark">#FF6700</item>~\n~        <item name="colorAccent">#D0CFCF</item>~\n~        <item name="windowNoTitle">true</item>~\n~        <item name="windowActionBar">false</item>~\n~    </style>~\n~</resources>~\n~)~\n~~\n~AddManifestText(<uses-permission~\n~	android:name="android.permission.WRITE_EXTERNAL_STORAGE"~\n~	android:maxSdkVersion="18" />~\n~)~\n~~\n~AddApplicationText(~\n~  <provider~\n~  android:name="android.support.v4.content.FileProvider"~\n~  android:authorities="$PACKAGE$.provider"~\n~  android:exported="false"~\n~  android:grantUriPermissions="true">~\n~  <meta-data~\n~  android:name="android.support.FILE_PROVIDER_PATHS"~\n~  android:resource="@xml/provider_paths"/>~\n~  </provider>~\n~)~\n~CreateResource(xml, provider_paths,~\n~   <files-path name="name" path="shared" />~\n~)~\n~~\n~CreateResourceFromFile(Macro, FirebaseAnalytics.GooglePlayBase)~\n~AddApplicationText(~\n~<meta-data~\n~  android:name="com.google.android.geo.API_KEY"~\n~  android:value="AIzaSyDJ3_TESKGLUAr8YI3T6l4jojX_CY7fL8Y"/>~\n~)~\n~~\n~AddApplicationText(~\n~<uses-library~\n~      android:name="org.apache.http.legacy"~\n~      android:required="false" />~\n~)~\n~~\n~SetApplicationAttribute(android:usesCleartextTraffic, "true")~\n~'End of default text.~\n~
Module1=FileProvider
Module2=forth_page
Module3=General
Module4=second_page
Module5=Starter
Module6=third_page
NumberOfFiles=14
NumberOfLibraries=11
NumberOfModules=6
Version=11
@EndOfDesignText@
#Region  Project Attributes 
	#ApplicationLabel: Suitmedia Test
	#VersionCode: 1
	#VersionName: 1.0
	'SupportedOrientations possible values: unspecified, landscape or portrait.
	#SupportedOrientations: portrait
	#CanInstallToExternalStorage: False
#End Region

#Region  Activity Attributes 
	#FullScreen: False
	#IncludeTitle: False
#End Region

Sub Process_Globals
	'These global variables will be declared once when the application starts.
	'These variables can be accessed from all modules.
	Private ion As Object
	Private const tempImageFile As String = "tempimage.jpg"
	Private lastPicture As Bitmap
End Sub

Sub Globals
	'These global variables will be redeclared each time the activity is created.
	Private Label3 As Label
	Private EditText1 As EditText
	Private EditText2 As EditText
	Private ImageView1 As ImageView
	Dim bm, bm1 As Bitmap
	Dim nativeMe As JavaObject
	Private Button2 As Button
	Private Label5 As Label
	Private Label6 As Label
	Private Panel5 As Panel
End Sub

Sub Activity_Create(FirstTime As Boolean)
	
	Dim jo As JavaObject
	Dim window As JavaObject = jo.InitializeContext.RunMethod("getWindow", Null)
	window.RunMethod("addFlags", Array(Bit.Or(0x00000200, 0x08000000)))
	Activity.Height = Activity.Height + 24dip
	
	Activity.LoadLayout("Layout")
	General.SetBackgroundTintList(EditText1,Colors.Transparent,Colors.Transparent)
	General.SetBackgroundTintList(EditText2,Colors.Transparent,Colors.Transparent)
	
	nativeMe.InitializeContext
   
	Dim borderWidth1 As Int = 50
	Dim borderColor1 As Int = Colors.LightGray
	ImageView1.Bitmap = Null
	bm.Initialize(File.DirAssets,"profile1.png")
	bm1 = nativeMe.RunMethod("getRoundBitmap",Array(bm,borderColor1, borderWidth1))
	ImageView1.Bitmap = bm1
	
	Label3.Text = "Copyright " & Chr(0x00A9) & " Suitmedia All Rights Reserved."
	
	
End Sub

Sub Activity_Resume

End Sub

Sub Activity_Pause (UserClosed As Boolean)

End Sub

Sub Button1_Click
	If EditText1.Text.Length>0 And EditText2.Text.Length>0 Then
		If EditText2.Text="palindrome" Then
			General.typed_name= EditText1.Text
			General.last_image =ImageView1.Bitmap
			StartActivity(second_page)
			Activity.Finish
		End If
	Else
		MsgboxAsync("Please fill complete","Suitmedia")
	End If
	
End Sub

Private Sub Button2_Click
	If EditText2.Text.Length>0 Then
		If EditText2.Text = "palindrome" Then
			MsgboxAsync("It is palindrome","Suitmedia")
		Else
			MsgboxAsync("Not palindrome","Suitmedia")
		End If
	Else
		MsgboxAsync("Empty Text","Suitmedia")
	End If
End Sub


Private Sub ImageView1_Click
	Panel5.SetVisibleAnimated(200,True)
End Sub



Private Sub Label5_Click
	TakePicture
	Panel5.Visible=False
End Sub

Private Sub Label6_Click
	Panel5.Visible=False
	Dim Chooser As ContentChooser
	Chooser.Initialize("chooser")
	Chooser.Show("image/*", "Select an image")
End Sub

Sub chooser_Result (Success As Boolean, Dir As String, FileName As String)
	If Success Then
		ImageView1.Bitmap=LoadBitmap(Dir,FileName)
	Else
		ToastMessageShow("No image selected", True)
	End If
End Sub


Sub TakePicture
	Dim i As Intent
	i.Initialize("android.media.action.IMAGE_CAPTURE", "")
	File.Delete(Starter.provider.SharedFolder, tempImageFile)
	Dim u As Object = Starter.provider.GetFileUri(tempImageFile)
	i.PutExtra("output", u) 'the image will be saved to this path
	Try
		StartActivityForResult(i)
	Catch
		ToastMessageShow("Camera is not available.", True)
		Log(LastException)
	End Try
End Sub

'result arrives here
Sub ion_Event (MethodName As String, Args() As Object) As Object
	If Args(0) = -1 Then
		Try
			Dim in As Intent = Args(1)
			If File.Exists(Starter.provider.SharedFolder, tempImageFile) Then
				lastPicture = LoadBitmapSample(Starter.provider.SharedFolder, tempImageFile, ImageView1.Width, ImageView1.Height)
				ImageView1.Bitmap = lastPicture
			Else If in.HasExtra("data") Then 'try to get thumbnail instead
				Dim jo As JavaObject = in
				lastPicture = jo.RunMethodJO("getExtras", Null).RunMethod("get", Array("data"))
			End If
		Catch
			Log(LastException)
		End Try
	End If
	If lastPicture.IsInitialized Then 
		'ImageView1.Bitmap = lastPicture
		nativeMe.InitializeContext
   
		Dim borderWidth1 As Int = 50
		Dim borderColor1 As Int = Colors.LightGray
		ImageView1.Bitmap = Null
		bm.Initialize3(lastPicture)
		bm1 = nativeMe.RunMethod("getRoundBitmap",Array(bm,borderColor1, borderWidth1))
		ImageView1.Bitmap = bm1
	End If
	Return Null
End Sub


Sub StartActivityForResult(i As Intent)
	Dim jo As JavaObject = GetBA
	ion = jo.CreateEvent("anywheresoftware.b4a.IOnActivityResult", "ion", Null)
	jo.RunMethod("startActivityForResult", Array As Object(ion, i))
End Sub

Sub GetBA As Object
	Dim jo As JavaObject
	Dim cls As String = Me
	cls = cls.SubString("class ".Length)
	jo.InitializeStatic(cls)
	Return jo.GetField("processBA")
End Sub


#If Java

import android.graphics.Bitmap;
import android.graphics.Canvas;
import android.graphics.Path;
import android.graphics.Rect;
import android.graphics.RectF;
import android.graphics.drawable.BitmapDrawable;
import android.graphics.drawable.Drawable;
import android.graphics.Path.FillType;
import android.graphics.Paint;
import android.graphics.Color;
import android.view.View;

import android.annotation.SuppressLint;
import android.content.Context;
import android.graphics.BitmapShader;
import android.graphics.Shader;
import android.graphics.PorterDuffXfermode;
import android.graphics.PorterDuff.Mode;


public static Bitmap getRoundBitmap(Bitmap scaleBitmapImage, int borderColor, int borderWidth) {
    int targetWidth = 1000;
    int targetHeight = 1000;
    int radius = Math.min((targetHeight - 5)/2, (targetWidth - 5)/2);  
   
    Bitmap targetBitmap = Bitmap.createBitmap(targetWidth, targetHeight,
            Bitmap.Config.ARGB_8888);

    Canvas canvas = new Canvas(targetBitmap);
    Path path = new Path();
    path.addCircle(((float) targetWidth - 1) / 2,
            ((float) targetHeight - 1) / 2,
            (Math.min(((float) targetWidth), ((float) targetHeight)) / 2),
            Path.Direction.CCW);

    canvas.clipPath(path);
   
    Bitmap sourceBitmap = scaleBitmapImage;
   
    canvas.drawBitmap(sourceBitmap, new Rect(0, 0, sourceBitmap.getWidth(),
            sourceBitmap.getHeight()), new Rect(0, 0, targetWidth,
            targetHeight), null);
           
           
    Paint p = new Paint();                                             
    p.setAntiAlias(true);                  
    //    canvas.drawBitmap(sourceBitmap, 4, 4, p);                                     
    p.setXfermode(null);                                               
    p.setStyle(Paint.Style.STROKE);                                          
    p.setColor(borderColor);                                           
    p.setStrokeWidth(borderWidth);                                               
    canvas.drawCircle((targetWidth / 2) , (targetHeight / 2) , radius, p);                             

    return targetBitmap;
}   
   
    public static Bitmap addSquareBorder(Bitmap bmp, int borderSize, int bordercolor) {
           
        Bitmap bmpWithBorder = Bitmap.createScaledBitmap(bmp, bmp.getWidth() + borderSize * 2, bmp.getHeight() + borderSize * 2, false);           
           
        Canvas canvas = new Canvas(bmpWithBorder);
        canvas.drawColor(bordercolor);
        canvas.drawBitmap(bmp, borderSize, borderSize, null);
        return bmpWithBorder;
    }   
   
   


#End If




